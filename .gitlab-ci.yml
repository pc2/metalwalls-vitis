# ================
# Meta & Templates
# ================

stages:
  - format
  - build
  - test
  - synthesis
  - run

variables:
  TARGET: "hw" # Can be changed to sw_emu quickly to test the pipeline with software emulation
  ACCOUNT: "hpc-prf-cifi"
  MW_BINARY_DIR: "./build/"

default:
  id_tokens:
    CI_JOB_JWT:
      aud: https://git.uni-paderborn.de
  tags:
    - slurm
  before_script:
      - source ./env.sh

.build:
  stage: build
  variables:
      SCHEDULER_PARAMETERS: "-A ${ACCOUNT} -p normal -c 8 -t 00:30:00"
  script:
      - 'make ${BUILD_TARGET} -j8 TARGET=sw_emu'
  needs:
    - job: format
      artifacts: false

.test:
  stage: test
  script:
    - mpirun -np 32 ./build/metalwalls ./experiments/supercap/input_f90.dat
  variables:
    SCHEDULER_PARAMETERS: "-A ${ACCOUNT} -p normal -n 32 -t 01:00:00"
    XCL_EMULATION_MODE: "sw_emu"
  needs:
    - build:host
    - build:k0_acc
    - build:sr_acc
    - build:lr_acc

.synthesis:
    stage: synthesis
    only:
        - web
    variables:
        SCHEDULER_PARAMETERS: "-A ${ACCOUNT} -p normal -q fpgasynthesis -c 16 -t 24:00:00 --mem 64G"
    script:
        - "make ${BUILD_TARGET} TARGET=${TARGET}"
        - "archive_summary -ksx build/${BUILD_TARGET}_${TARGET}.xclbin.link_summary"
    artifacts:
        paths:
            - build/*.xclbin
            - build/*.link_summary.archive
        when: always

# =========
# Prechecks
# =========

format:
    stage: format
    variables:
        SCHEDULER_PARAMETERS: "-A ${ACCOUNT} -p normal -c 16 -t 00:30:00"
    script:
        - './scripts/format_code.sh # Run the formatting script'
        - 'test -z "$(git ls-files -m)" # Check that the formatting script did not change the code.'

# ==============
# Build software
# ==============

build:host:
  extends: .build
  variables:
    BUILD_TARGET: host
  artifacts:
    paths:
      - build/metalwalls

build:k0_acc:
  extends: .build
  variables:
      BUILD_TARGET: k0_acc
  artifacts:
    paths:
      - build/*.xclbin

build:sr_acc:
  extends: .build
  variables:
      BUILD_TARGET: sr_acc
  artifacts:
    paths:
      - build/*.xclbin

build:lr_acc:
  extends: .build
  variables:
      BUILD_TARGET: lr_acc
  artifacts:
    paths:
      - build/*.xclbin

# ============
# Run software
# ============

test:supercap:
  extends: .test
  variables:
    EXPERIMENT: supercap

test:graphene:
  extends: .test
  variables:
    EXPERIMENT: graphene

# =========
# Synthesis
# =========

synth:k0_acc:
  extends: .synthesis
  variables:
      BUILD_TARGET: k0_acc
  needs:
    - test:supercap
    - test:graphene

synth:sr_acc:
  extends: .synthesis
  variables:
    BUILD_TARGET: sr_acc
  needs:
    - test:supercap
    - test:graphene

synth:lr_acc:
  extends: .synthesis
  variables:
    BUILD_TARGET: lr_acc
  needs:
    - test:supercap
    - test:graphene

# ============
# Run hardware
# ============

run:
  stage: run
  variables:
    SCHEDULER_PARAMETERS: "-A ${ACCOUNT} -p fpga --constraint xilinx_u280_xrt2.16 -n 15 -N 5 -t 00:15:00"
  needs:
    - build:host
    - synth:k0_acc
    - synth:sr_acc
    - synth:lr_acc
  script:
    - "./scripts/run_miniapp.sh"
  artifacts:
    paths:
      - "metrics_*.json"
      - "charges_*.out"
      - "./build/*.xclbin"
      - "./build/metalwalls"
    when: always
